<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.opencmw</groupId>
    <artifactId>opencmw</artifactId>

    <version>${revision}${sha1}${changelist}</version>
    <packaging>pom</packaging>
    <name>opencmw</name>
    <description>
        Microservice middleware framework for beam-based feedback systems at the FAIR particle accelerator.
    </description>

    <modules>
        <module>serialiser</module>
        <module>microservice-core</module>
        <module>microservice-server</module>
        <module>microservice-client</module>
        <module>concepts</module>
    </modules>

    <properties>
        <revision>0.0.1</revision>
        <changelist>-SNAPSHOT</changelist>
        <sha1></sha1>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <versions.slf4j>2.0.0-alpha0</versions.slf4j>
        <versions.jupiter>5.7.0</versions.jupiter>
        <versions.chartfx>11.2.3</versions.chartfx>
    </properties>

    <licenses>
        <license>
            <name>LGPLv3</name>
            <url>https://www.gnu.org/licenses/lgpl-3.0.html</url>
        </license>
    </licenses>

    <organization>
        <name>GSI Helmholtzzentrum f√ºr Schwerionenforschung GmbH</name>
        <url>http://www.gsi.de</url>
    </organization>

    <url>https://github.com/FAIR-ACC/opencmw-java</url>

    <developers>
        <developer>
            <id>rstein</id>
            <name>Ralph J. Steinhagen</name>
            <email>R.Steinhagen@gsi.de</email>
            <url>https://fair-wiki.gsi.de/FC2WG</url>
            <timezone>+1</timezone>
            <roles>
                <role>owner</role>
                <role>architect</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>akrimm</id>
            <name>Alexander Krimm</name>
            <email>A.Krimm@gsi.de</email>
            <timezone>+1</timezone>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/FAIR-ACC/opencmw-java</connection>
        <developerConnection>scm:git:git@github.com:FAIR-ACC/opencmw-java</developerConnection>
        <url>https://github.com/FAIR-ACC/opencmw-java</url>
    </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.2.5</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <!-- Jacoco prepare-agent builds some command-line params without which jacoco will not instrument. Hence it is important to add those command-line params here (${argLine} holds those params) -->
                    <argLine>
                        ${argLine}
                        --add-opens io.opencmw.serialiser/io.opencmw.serialiser=ALL-UNNAMED
                        --add-opens io.opencmw.serialiser/io.opencmw.serialiser.spi=ALL-UNNAMED
                        --add-opens io.opencmw.serialiser/io.opencmw.serialiser.spi.iobuffer=ALL-UNNAMED
                        --add-opens io.opencmw.serialiser/io.opencmw.serialiser.annotations=ALL-UNNAMED
                        --add-opens io.opencmw.core/io.opencmw.core=ALL-UNNAMED
                        --add-opens io.opencmw.core/io.opencmw.core.filter=ALL-UNNAMED
                        --add-opens io.opencmw.core/io.opencmw.core.utils=ALL-UNNAMED
                        --add-opens io.opencmw.core/io.opencmw.core.datasource=ALL-UNNAMED
                        --add-opens io.opencmw.client/io.opencmw.client=ALL-UNNAMED
                        --add-opens io.opencmw.client/io.opencmw.client.rest=ALL-UNNAMED
                        --add-opens io.opencmw.client/io.opencmw.client.cmwlight=ALL-UNNAMED
                        --add-opens io.opencmw.concepts/io.opencmw.concepts.cmwlight=ALL-UNNAMED
                        --add-opens io.opencmw.concepts/io.opencmw.concepts.aggregate=ALL-UNNAMED
                        -Duser.language=en -Duser.country=US
                        -Xms256m -Xmx2048m -XX:G1HeapRegionSize=32m
                        -Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw
                    </argLine>
                    <forkCount>1</forkCount>
                    <rerunFailingTestsCount>2</rerunFailingTestsCount>
                    <runOrder>random</runOrder>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${versions.slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${versions.slf4j}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${versions.jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${versions.jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${versions.jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.0.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.sandec</groupId>
            <artifactId>JMemoryBuddy</artifactId>
            <version>0.2.6</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.4</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>
