# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  JAVA_REFERENCE_VERSION: 11

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ] # TODO add: windows-latest, macOS-latest
        java: [ 11, 16-ea ]
        java_reference: [ 11 ]
      fail-fast: false
      max-parallel: 6
    name: Test JDK ${{ matrix.java }}, ${{ matrix.os }}
    environment: configure coverage
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 25
    - name: Set version environment for version string
      run: |
        export REV=${GITHUB_REF#refs/*/}
        echo "REVISION=${REV/\//-}" >> $GITHUB_ENV
        if [[ "${GITHUB_REF#refs/tags/}" =~ ^${{ env.JAVA_REFERENCE_VERSION }}\.[0-9]*\.[0-9]*$ ]]; then
          echo "CHANGELIST=" >> $GITHUB_ENV
        else
          echo "CHANGELIST=-SNAPSHOT" >> $GITHUB_ENV
        fi
        echo "github ref: ${GITHUB_REF}"
        echo "setting env:"
        cat ${GITHUB_ENV}
    - uses: actions/cache@v1 # cache maven packages to speed up build
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Set up JDK ${{matrix.java}}
      uses: actions/setup-java@v1.4.3
      with:
        java-version: ${{matrix.java}}
    - name: Test with Maven
      run: mvn -Dgpg.skip=true --no-transfer-progress --batch-mode -Drevision=${REVISION} -Dchangelist=${CHANGELIST} package
    - name: coverage report - send to Codecov
      if: matrix.java == env.JAVA_REFERENCE_VERSION
      uses: codecov/codecov-action@v1.2.1
    - name: coverage report - send to Codacy
      if: matrix.java == env.JAVA_REFERENCE_VERSION
      uses: codacy/codacy-coverage-reporter-action@0.2.0
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  publish:
    name: Deploy to github packages and Sonatype OSSRH
    needs: test
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - uses: actions/checkout@v2
      - name: Set version environment for version string
        run: |
          export REV=${GITHUB_REF#refs/*/}
          echo "REVISION=${REV/\//-}" >> $GITHUB_ENV
          if [[ "${GITHUB_REF#refs/tags/}" =~ ^${{ env.JAVA_REFERENCE_VERSION }}\.[0-9]*\.[0-9]*$ ]]; then
            echo "CHANGELIST=" >> $GITHUB_ENV
          else
            echo "CHANGELIST=-SNAPSHOT" >> $GITHUB_ENV
          fi
          echo "github ref: ${GITHUB_REF}"
          echo "setting env:"
          cat ${GITHUB_ENV}
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up JDK ${{ env.JAVA_REFERENCE_VERSION }}
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_REFERENCE_VERSION }}
          gpg-private-key: ${{ secrets.GPG_KEY }}
          gpg-passphrase: GPG_PASS
      - name: Deploy to Github Packages
        run: if [ -z "$CHANGELIST" ]; then mvn -DskipTests --no-transfer-progress --batch-mode -Drevision=${REVISION} -Dchangelist=${CHANGELIST} -Drelease=github deploy; fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PASS: ${{ secrets.GPG_PASSPHRASE }}
      - name: Set up JDK to publish to OSSRH
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_REFERENCE_VERSION }}
          server-id: ossrh
          server-username: SONATYPE_USER
          server-password: SONATYPE_PASS
          # gpg-private-key: ${{ secrets.GPG_KEY }} # gpg key was already added in the first java-setup phase, will fail the cleanup if added again
          gpg-passphrase: GPG_PASS
      - name: Deploy to Maven Central
        run: mvn -DskipTests --no-transfer-progress --batch-mode -Drevision=${REVISION} -Dchangelist=${CHANGELIST} -Drelease=ossrh deploy
        env:
          GPG_PASS: ${{ secrets.GPG_PASSPHRASE }}
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASS: ${{ secrets.SONATYPE_PASS }}

...
