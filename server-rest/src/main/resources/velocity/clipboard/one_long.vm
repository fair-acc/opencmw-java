<!DOCTYPE html>
<html lang="$msg.get("LOCALE")">
<head>
    <title>$title</title>
    <meta charset="utf-8">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="Description" content="Clipboard Image Content">
    <link rel="stylesheet" href="/main.css">
    <style>
        img{
            width: 100%;
            height: 100vh;
            object-fit: contain;
        }
        html, body, main {
            margin: 0;
            width: 100%;
            height: 100vh;
        }
    </style>
    <script>
        var isFirefox = typeof InstallTrigger !== 'undefined';
        
        function onLoad() {
            if (isFirefox) {
                subscribe()
            } else {
                setTimeout('refreshIt()', $updatePeriod);
            }
        }
        
        
        function refreshIt() {
            // old implementation (works fine with most conform browsers)
            if (!document.images) return;
            //document.getElementById('myStatus').src = '$imageSource?$longPolling,'+ new Date().getTime();
            document.getElementById('myStatus').src = '$imageSource?$longPolling';
            setTimeout('refreshIt()', $updatePeriod); // refresh every n milliseconds
        }
       
        // above works fine for Google Chrome but fails with Firefox
        // N.B. Firefox does not honour the 'Cache-Control: no-store' response header :-(
        // idea from :https://stackoverflow.com/questions/52615025/handle-specific-image-response-by-javascript
        async function subscribe() {
            var myImage = document.getElementById('myStatus');
            var myRequest = new XMLHttpRequest();
            myRequest.open('GET', '$imageSource?longpolling', true);
            myRequest.responseType = 'blob';
            myRequest.onreadystatechange = () => {
                if (myRequest.readyState !== 4) {
                    return;
                }
                if (myRequest.status === 200) {
                    var blob = myRequest.response;
                    var objectURL = URL.createObjectURL(blob);
                    // this is the trick - generates url like blob: http://localhost/adb50c88-9468-40d9-8b0b-1f6ec8bb5a32
                    myImage.src = objectURL;
                    setTimeout(function() {
                        myRequest.open('GET', '$imageSource?longpolling', true);
                        myRequest.send();
                     }, $updatePeriod); // refresh every n milliseconds
                    //myRequest.send();
                } else if (myRequest.status === 499) {
                    console.log('... waiting for image');
                    myRequest.send(); // retry
                } else {
                    console.log('image not found');
                }
            };
            myRequest.send();
        }
    </script>
</head>

<body onLoad="onLoad()">
    <a class="skip-link" href="#maincontent">Skip to main</a>
    <a href="$indexRoot">
        <img src="$imageSource" id="myStatus" alt="$imageSource">
    </a>
</body>

</html>