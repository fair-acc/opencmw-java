<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.opencmw</groupId>
        <artifactId>opencmw</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>server-rest</artifactId>

    <description>
        OpenCMW RESTful plugin extension to micro-service implementation.
    </description>

    <dependencies>
        <dependency>
            <groupId>io.opencmw</groupId>
            <artifactId>server</artifactId>
            <version>${revision}${sha1}${changelist}</version>
        </dependency>
        <dependency>
            <groupId>de.gsi.dataset</groupId>
            <artifactId>chartfx-dataset</artifactId>
            <version>${version.chartfx}</version>
            <scope>test</scope>
        </dependency>

        <!-- alternate Javalin dependency injection - add all and remove those not necessary -->
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>${version.javalin}</version>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-jdk8</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>cc.vileda</groupId>
                    <artifactId>kotlin-openapi3-dsl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.github.classgraph</groupId>
                    <artifactId>classgraph</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin-openapi</artifactId>
            <version>${version.javalin}</version>
        </dependency>
        <!-- for HTTP/2 ALPN (application layer protocol negotiation) -->
        <dependency>
            <groupId>org.eclipse.jetty.http2</groupId>
            <artifactId>http2-server</artifactId>
            <version>${version.jetty}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-alpn-conscrypt-server</artifactId>
            <version>${version.jetty}</version>
        </dependency>

        <!-- HTTP template engine-->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-engine-core</artifactId>
            <version>${version.velocity}</version>
        </dependency>
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
        </dependency>

        <!-- serialiser dependencies -->
        <dependency>
            <groupId>com.jsoniter</groupId>
            <artifactId>jsoniter</artifactId>
            <version>0.9.23</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>${version.micrometer}</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${version.micrometer}</version>
        </dependency>
    </dependencies>

</project>